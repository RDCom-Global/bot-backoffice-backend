AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  bot-backoffice-backend

  Sample SAM Template for bot-backoffice-backend


Globals:
  Function:
    Timeout: 3

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowHeaders: '''*'''
        AllowOrigin: '''*'''
        AllowCredentials: '''*'''
        AllowMethods: '''*'''
  CategoriesGetAll:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_get_all/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesGetAll:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categories
            Method: get
  CategoriesGetAllCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_get_all_count/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesGetAllCount:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesCount
            Method: get
  CategoriesGetAllTypes:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_get_all_types/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesGetAllTypes:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesTypes
            Method: get
  CategoriesGetLastCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_get_last_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesGetLastCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesLast
            Method: get
  CategoriesGetOneCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_get_one_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesGetOneCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesOne
            Method: get
  CategoriesSearchCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_get_search_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesSearchCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesSearch
            Method: get
  CategoriesCreateOneCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_create_one_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesCreateOneCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesAdd
            Method: post
  CategoriesDeleteOneCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_delete_one_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesDeleteOneCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesDelete
            Method: post
  CategoriesUpdateOneCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_update_one_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesUpdateOneCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /categoriesUpdate
            Method: post
  PathologiesGetAll:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_all/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetAll:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologies
            Method: get
  PathologiesGetAllCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_all_count/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetAllCount:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesCount
            Method: get
  PathologiesGetLastPathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_last_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetLastPathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesLast
            Method: get
  PathologiesGetOnePathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_one_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetOnePathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesOne
            Method: get
  PathologiesGetSearchPathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchPathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearch
            Method: get
  PathologiesGetSearchPathologyByOrpha:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_pathology_by_orpha/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchPathologyByOrpha:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbyorpha
            Method: get
  PathologiesGetSearchPathologyByOmim:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_pathology_by_omim/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchPathologyByOmim:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbyomim
            Method: get
  PathologiesGetSearchByCategoryPathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_by_category_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchByCategoryPathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbycategory
            Method: get
  PathologiesGetSearchByOneSymptomPathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_by_one_symptom_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchByOneSymptomPathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbyonesymptom
            Method: get
  PathologiesGetSearchByOneSymptomPathologyCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_by_one_symptom_pathology_count/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchByOneSymptomPathologyCount:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbyonesymptomCount
            Method: get
  PathologiesGetSearchByTwoSymptomsPathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_by_two_symptoms_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchByTwoSymptomsPathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbytwosymptoms
            Method: get
  PathologiesGetSearchByTwoSymptomsPathologyCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_by_two_symptoms_pathology_count/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchByTwoSymptomsPathologyCount:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbytwosymptomsCount
            Method: get
  PathologiesGetSearchByThreeSymptomsPathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_by_three_symptoms_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchByThreeSymptomsPathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbythreesymptoms
            Method: get
  PathologiesGetSearchByThreeSymptomsPathologyCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_get_search_by_three_symptoms_pathology_count/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesGetSearchByThreeSymptomsPathologyCount:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesSearchbythreesymptomsCount
            Method: get
  PathologiesCreateOnePathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_create_one_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesCreateOnePathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesAdd
            Method: post
  PathologiesDeleteOnePathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_delete_one_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesDeleteOnePathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesDelete
            Method: post
  PathologiesUpdateOnePathology:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_update_one_pathology/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesUpdateOnePathology:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pathologiesUpdate
            Method: post
  SymptomsGetAll:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_all/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetAll:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptoms
            Method: get
  SymptomsGetAllSymptomsPending:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_all_symptoms_pending/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetAllSymptomsPending:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsPending
            Method: get
  SymptomsGetAllSymptomsCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_all_symptoms_count/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetAllSymptomsCount:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsCount
            Method: get
  SymptomsGetAllSymptomsCountPending:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_all_symptoms_count_pending/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetAllSymptomsCountPending:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsPendingCount
            Method: get
  SymptomsGetLastSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_last_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetLastSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsLast
            Method: get
  SymptomsGetLastSymptomRDC:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_last_symptom_rdc/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetLastSymptomRDC:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsLastRDC
            Method: get
  SymptomsGetOneSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_one_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetOneSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsOne
            Method: get
  SymptomsGetSearchSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_search_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetSearchSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsSearch
            Method: get
  SymptomsGetSearchByHpoSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_search_by_hpo_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetSearchByHpoSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsSearchbyhpo
            Method: get
  SymptomsGetSearchByCategorySymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_search_by_category_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetSearchByCategorySymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsSearchbycategory
            Method: get
  SymptomsGetSearchByCategorySymptomCount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_get_search_by_category_symptom_count/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsGetSearchByCategorySymptomCount:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsSearchbycategoryCount
            Method: get
  SymptomsCreateOneSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_create_one_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsCreateOneSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptoms
            Method: post
  SymptomsDeleteOneSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_delete_one_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsDeleteOneSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsDelete
            Method: post
  SymptomsUpdateOneSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: symptoms_update_one_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        SymptomsUpdateOneSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /symptomsUpdate
            Method: post
  UsersUserGet:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users_user_get/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        UsersUserGet:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /login
            Method: get
  CategoriesCategoriesGetTheCategoriesForCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_categories_get_the_categories_for_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesCategoriesGetTheCategoriesForCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /cat_cat
            Method: get  
  CategoriesCategoriesGetAllSubcategoriesOfCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_categories_get_all_subcategories_of_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesCategoriesGetAllSubcategoriesOfCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /cat_catSubcategories
            Method: get  
  CategoriesCategoriesAddOneCategoryToCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_categories_add_one_category_to_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesCategoriesAddOneCategoryToCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /cat_catAdd
            Method: post  
  CategoriesCategoriesRemoveOneCategoryFromCategory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_categories_remove_one_category_from_category/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesCategoriesRemoveOneCategoryFromCategory:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /cat_catDelete
            Method: post  
  CategoriesSymptomsGetTheCategoriesforSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_symptoms_get_the_categories_for_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesSymptomsGetTheCategoriesforSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /cat_sym
            Method: get 
  CategoriesSymptomsAddOneCategoryToSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_symptoms_add_one_category_to_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesSymptomsAddOneCategoryToSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /cat_symAdd
            Method: post 
  CategoriesSymptomsRemoveOneCategoryFromSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: categories_symptoms_remove_one_category_from_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        CategoriesSymptomsRemoveOneCategoryFromSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /cat_symDelete
            Method: post 
  PathologiesSymptomsGetTheSymptoms:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_symptoms_get_the_symptoms/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesSymptomsGetTheSymptoms:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pat_sym
            Method: get
  PathologiesSymptomsGetPending:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_symptoms_get_pending/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesSymptomsGetPending:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pat_symPending
            Method: get
  PathologiesSymptomsValidateOneRelation:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_symptoms_validate_one_relation/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesSymptomsValidateOneRelation:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pat_symValidate
            Method: post
  PathologiesSymptomsAddOneSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_symptoms_add_one_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesSymptomsAddOneSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pat_symAdd
            Method: post
  PathologiesSymptomsRemoveOneSymptom:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pathologies_symptoms_remove_one_symptom/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-east-1:293854028872:layer:postgre:6
      Architectures:
        - x86_64
      Events:
        PathologiesSymptomsRemoveOneSymptom:
          Type: Api 
          Properties:
            RestApiId: !Ref MyApi
            Path: /pat_symDelete
            Method: post